{
  "swagger": "2.0",
  "info": {
    "description": "This is an API server for a painting sales website.\n",
    "version": "1.0.0",
    "title": "Painting Sales Website",
    "contact": {
      "email": "con19008@byui.edu"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": ["http"],
  "tags": [
    {
      "name": "painting",
      "description": "Operations about painting"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "Not Yet Implemented",
      "description": "These API endpoints are designed and will be created in the near future"
    }
  ],
  "paths": {
    "/painting/{stylename}": {
      "get": {
        "tags": ["painting"],
        "summary": "Finds paintings by style",
        "description": "Each painting has a unique style, this will basically find paintings by an exact style",
        "operationId": "getPainting",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stylename",
            "in": "path",
            "description": "The painting style",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "petstore_auth": ["write:pets", "read:pets"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Painting"
            }
          },
          "400": {
            "description": "Invalid painting style supplied"
          },
          "404": {
            "description": "Painting style not found"
          }
        }
      }
    },
    "/painting/": {
      
     
      "get": {
        "tags": ["Not Yet Implemented"],
        "summary": "Get all paintings",
        "operationId": "getAllPaintss",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "Array",
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Error occurred"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": ["Not Yet Implemented"],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": ["Not Yet Implemented"],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": ["user"],
        "summary": "Get all users",
        "operationId": "getAllUsers",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "Array",
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "This is for when a user creates an account",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "A User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": ["user"],
        "summary": "Get user by user name",
        "operationId": "getUserByName",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully modified user"
          },
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["user"],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted user"
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "agc"
        },
        "password": {
          "type": "string",
          "example": "Agc1234$"
        },
        "firstname": {
          "type": "string",
          "example": "Alvaro"
        },
        "lastname": {
          "type": "string",
          "example": "Condori"
        },
        "email": {
          "type": "string",
          "example": "agc@gmail.com"
        },
        "phonenumber": {
          "type": "string",
          "example": "543871234567"
        },
        "currentlocation": {
          "type": "string",
          "example": "Argentina"
        },
        "stylename": {
          "type": "string",
          "example": "Landscapes"
        },
        "message": {
          "type": "string",
          "example": ""
        }
      }
    },
    "Painting": {
      "type": "object",
      "properties": {
        "painting_name": {
          "type": "string",
          "example": "Sunrise"
        },
        "stylename": {
          "type": "string",
          "example": "Impressionism"
        },
        "author_name": {
          "type": "string",
          "example": "Claudia Dominguez"
        },
        "painting_description": {
          "type": "string",
          "example": "Two friends walking along the pier towards the sea"
        },
        "painting_date": {
          "type": "string",
          "format": "date",
          "example": "01/01/2020"
        },
        "painting_technic": {
          "type": "string",
          "example": "oleo paint paste"
        }
      }
    }
  }
}